[approximation]
; approximation technique to be used:
;  - als: approximate logic synthesis on assertion functions
;  - ps: precision-scaling on comparators
;  - full: both of the above-mentioned techniques
technique = als

; Approximation strategy (taken into account only for als and full techniques):
;  - one: one-step approximation strategy. All the trees are approximated simultaneously (as far as the assertion
;    functions are concerned). The set of decision variables of the optimization problem consists of the union of the
;    sets of decision variables that allow each of the individual trees to be optimized.
;    It is easy for the solution space to explode quickly, but (theoretically) this strategy should allow converging
;    towards the optimum between classification-accuracy loss and hardware resource savings.
;  - two: two-step approximation strategy. The two optimization steps involve first individual trees, each independently
;    approximated, then the whole classifier. The result of the individual tree optimization step is the input to the
;    second optimization step. When the trees are approximated, the decision variables represent the Hamming distance
;    between the exact specification and the approximated specification of the LUTs. When the entire classifier is
;    approximated, there is a decision variable for each tree, representing which approximate configuration resulting
;    from the first approximation step should be used to realize the assertion function of that particular tree.
;    This strategy allows to drastically reduce the size of the solution space, but, on the other hand, it may result
;    in sub-optimum points between classification-accuracy loss and hardware resource savings
strategy = two

[als]
cut_size = 4
catalog = lut_catalog.db
solver = boolector
timeout = 60000

[singlestage]
error_threshold = 1
archive_hard_limit = 30
archive_soft_limit = 50
archive_gamma = 2
hill_climbing_iterations = 500
initial_temperature = 500
final_temperature = 0.000001
cooling_factor =  0.9
annealing_iterations = 500

[twostages]
fst_error_metric = eprob
fst_error_threshold = 1
fst_num_vectors = 0
fst_archive_hard_limit = 30
fst_archive_soft_limit = 50
fst_archive_gamma = 2
fst_hill_climbing_iterations = 500
fst_initial_temperature = 500
fst_final_temperature = 0.000001
fst_cooling_factor =  0.9
fst_annealing_iterations = 500

snd_error_treshold = 1
snd_archive_hard_limit = 30
snd_archive_soft_limit = 50
snd_archive_gamma = 2
snd_hill_climbing_iterations = 500
snd_initial_temperature = 500
snd_final_temperature = 0.000001
snd_cooling_factor =  0.9
snd_annealing_iterations = 500
