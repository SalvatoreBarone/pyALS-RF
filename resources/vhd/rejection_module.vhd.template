-- 
-- This file has been auto-generated by pyALS-rf
-- https://github.com/SalvatoreBarone/pyALS-rf 
-- 
-- This is free software; you can redistribute it and/or modify it under
-- the terms of the GNU General Public License as published by the Free
-- Software Foundation; either version 3 of the License, or any later version.
-- 
-- This is distributed in the hope that it will be useful, but WITHOUT
-- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
-- more details.
-- 
-- You should have received a copy of the GNU General Public License along with
-- RMEncoder; if not, write to the Free Software Foundation, Inc., 51 Franklin
-- Street, Fifth Floor, Boston, MA 02110-1301, USA.

library ieee;
use ieee.std_logic_1164.all;
library work;

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
entity rejection_module is
    generic	(
        n_voting  : natural;
        n_candidates : natural;
        pipe_stages : natural);
    port (
        clock    : in  std_logic;
        reset_n  : in  std_logic;
        {% for c in candidates -%}
        candidate_{{c}}_sorted_preferences : in std_logic_vector(n_voting * (n_candidates - 2) / (2 * n_candidates) - 1 downto 0);
        {% endfor %}
        {% for c in candidates -%}candidate_{{c}} : out std_logic;
        {% endfor %}
        draw : out std_logic);
end rejection_module;

architecture dataflow of rejection_module is

begin

end dataflow;