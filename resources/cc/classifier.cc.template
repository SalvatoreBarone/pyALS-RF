// Copyright 2021-2022 Salvatore Barone <salvatore.barone@unina.it>
// 
// This file has been auto-generated by pyALS-rf
// https://github.com/SalvatoreBarone/pyALS-rf 
// 
// This is free software; you can redistribute it and/or modify it under
// the terms of the GNU General Public License as published by the Free
// Software Foundation; either version 3 of the License, or any later version.
// 
// This is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
// more details.
// 
// You should have received a copy of the GNU General Public License along with
// RMEncoder; if not, write to the Free Software Foundation, Inc., 51 Franklin
// Street, Fifth Floor, Boston, MA 02110-1301, USA. 

#include "classifier_{{id}}.h"
#include <iostream>

template <class T> T mask (T &t, int nab)
{
  unsigned long * raw_data = (unsigned long *)&t;
  *raw_data = (*raw_data) & (~((1L << nab)-1));
  return t;
}

bool func_or(bool op0, bool op1) {
  return op0 or op1;
}

bool func_or(bool op0, bool op1, bool op2) {
  return op0 or op1 or op2;
}

bool func_or(bool op0, bool op1, bool op2, bool op3) {
  return op0 or op1 or op2 or op3;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4) {
  return op0 or op1 or op2 or op3 or op4;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5) {
  return op0 or op1 or op2 or op3 or op4 or op5;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31 or op32;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31 or op32 or op33;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31 or op32 or op33 or op34;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31 or op32 or op33 or op34 or op35;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31 or op32 or op33 or op34 or op35 or op36;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31 or op32 or op33 or op34 or op35 or op36 or op37;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31 or op32 or op33 or op34 or op35 or op36 or op37 or op38;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31 or op32 or op33 or op34 or op35 or op36 or op37 or op38 or op39;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31 or op32 or op33 or op34 or op35 or op36 or op37 or op38 or op39 or op40;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31 or op32 or op33 or op34 or op35 or op36 or op37 or op38 or op39 or op40 or op41;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31 or op32 or op33 or op34 or op35 or op36 or op37 or op38 or op39 or op40 or op41 or op42;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31 or op32 or op33 or op34 or op35 or op36 or op37 or op38 or op39 or op40 or op41 or op42 or op43;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31 or op32 or op33 or op34 or op35 or op36 or op37 or op38 or op39 or op40 or op41 or op42 or op43 or op44;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31 or op32 or op33 or op34 or op35 or op36 or op37 or op38 or op39 or op40 or op41 or op42 or op43 or op44 or op45;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31 or op32 or op33 or op34 or op35 or op36 or op37 or op38 or op39 or op40 or op41 or op42 or op43 or op44 or op45 or op46;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31 or op32 or op33 or op34 or op35 or op36 or op37 or op38 or op39 or op40 or op41 or op42 or op43 or op44 or op45 or op46 or op47;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47, bool op48) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31 or op32 or op33 or op34 or op35 or op36 or op37 or op38 or op39 or op40 or op41 or op42 or op43 or op44 or op45 or op46 or op47 or op48;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47, bool op48, bool op49) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31 or op32 or op33 or op34 or op35 or op36 or op37 or op38 or op39 or op40 or op41 or op42 or op43 or op44 or op45 or op46 or op47 or op48 or op49;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47, bool op48, bool op49, bool op50) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31 or op32 or op33 or op34 or op35 or op36 or op37 or op38 or op39 or op40 or op41 or op42 or op43 or op44 or op45 or op46 or op47 or op48 or op49 or op50;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47, bool op48, bool op49, bool op50, bool op51) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31 or op32 or op33 or op34 or op35 or op36 or op37 or op38 or op39 or op40 or op41 or op42 or op43 or op44 or op45 or op46 or op47 or op48 or op49 or op50 or op51;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47, bool op48, bool op49, bool op50, bool op51, bool op52) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31 or op32 or op33 or op34 or op35 or op36 or op37 or op38 or op39 or op40 or op41 or op42 or op43 or op44 or op45 or op46 or op47 or op48 or op49 or op50 or op51 or op52;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47, bool op48, bool op49, bool op50, bool op51, bool op52, bool op53) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31 or op32 or op33 or op34 or op35 or op36 or op37 or op38 or op39 or op40 or op41 or op42 or op43 or op44 or op45 or op46 or op47 or op48 or op49 or op50 or op51 or op52 or op53;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47, bool op48, bool op49, bool op50, bool op51, bool op52, bool op53, bool op54) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31 or op32 or op33 or op34 or op35 or op36 or op37 or op38 or op39 or op40 or op41 or op42 or op43 or op44 or op45 or op46 or op47 or op48 or op49 or op50 or op51 or op52 or op53 or op54;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47, bool op48, bool op49, bool op50, bool op51, bool op52, bool op53, bool op54, bool op55) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31 or op32 or op33 or op34 or op35 or op36 or op37 or op38 or op39 or op40 or op41 or op42 or op43 or op44 or op45 or op46 or op47 or op48 or op49 or op50 or op51 or op52 or op53 or op54 or op55;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47, bool op48, bool op49, bool op50, bool op51, bool op52, bool op53, bool op54, bool op55, bool op56) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31 or op32 or op33 or op34 or op35 or op36 or op37 or op38 or op39 or op40 or op41 or op42 or op43 or op44 or op45 or op46 or op47 or op48 or op49 or op50 or op51 or op52 or op53 or op54 or op55 or op56;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47, bool op48, bool op49, bool op50, bool op51, bool op52, bool op53, bool op54, bool op55, bool op56, bool op57) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31 or op32 or op33 or op34 or op35 or op36 or op37 or op38 or op39 or op40 or op41 or op42 or op43 or op44 or op45 or op46 or op47 or op48 or op49 or op50 or op51 or op52 or op53 or op54 or op55 or op56 or op57;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47, bool op48, bool op49, bool op50, bool op51, bool op52, bool op53, bool op54, bool op55, bool op56, bool op57, bool op58) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31 or op32 or op33 or op34 or op35 or op36 or op37 or op38 or op39 or op40 or op41 or op42 or op43 or op44 or op45 or op46 or op47 or op48 or op49 or op50 or op51 or op52 or op53 or op54 or op55 or op56 or op57 or op58;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47, bool op48, bool op49, bool op50, bool op51, bool op52, bool op53, bool op54, bool op55, bool op56, bool op57, bool op58, bool op59) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31 or op32 or op33 or op34 or op35 or op36 or op37 or op38 or op39 or op40 or op41 or op42 or op43 or op44 or op45 or op46 or op47 or op48 or op49 or op50 or op51 or op52 or op53 or op54 or op55 or op56 or op57 or op58 or op59;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47, bool op48, bool op49, bool op50, bool op51, bool op52, bool op53, bool op54, bool op55, bool op56, bool op57, bool op58, bool op59, bool op60) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31 or op32 or op33 or op34 or op35 or op36 or op37 or op38 or op39 or op40 or op41 or op42 or op43 or op44 or op45 or op46 or op47 or op48 or op49 or op50 or op51 or op52 or op53 or op54 or op55 or op56 or op57 or op58 or op59 or op60;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47, bool op48, bool op49, bool op50, bool op51, bool op52, bool op53, bool op54, bool op55, bool op56, bool op57, bool op58, bool op59, bool op60, bool op61) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31 or op32 or op33 or op34 or op35 or op36 or op37 or op38 or op39 or op40 or op41 or op42 or op43 or op44 or op45 or op46 or op47 or op48 or op49 or op50 or op51 or op52 or op53 or op54 or op55 or op56 or op57 or op58 or op59 or op60 or op61;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47, bool op48, bool op49, bool op50, bool op51, bool op52, bool op53, bool op54, bool op55, bool op56, bool op57, bool op58, bool op59, bool op60, bool op61, bool op62) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31 or op32 or op33 or op34 or op35 or op36 or op37 or op38 or op39 or op40 or op41 or op42 or op43 or op44 or op45 or op46 or op47 or op48 or op49 or op50 or op51 or op52 or op53 or op54 or op55 or op56 or op57 or op58 or op59 or op60 or op61 or op62;
}

bool func_or(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47, bool op48, bool op49, bool op50, bool op51, bool op52, bool op53, bool op54, bool op55, bool op56, bool op57, bool op58, bool op59, bool op60, bool op61, bool op62, bool op63) {
  return op0 or op1 or op2 or op3 or op4 or op5 or op6 or op7 or op8 or op9 or op10 or op11 or op12 or op13 or op14 or op15 or op16 or op17 or op18 or op19 or op20 or op21 or op22 or op23 or op24 or op25 or op26 or op27 or op28 or op29 or op30 or op31 or op32 or op33 or op34 or op35 or op36 or op37 or op38 or op39 or op40 or op41 or op42 or op43 or op44 or op45 or op46 or op47 or op48 or op49 or op50 or op51 or op52 or op53 or op54 or op55 or op56 or op57 or op58 or op59 or op60 or op61 or op62 or op63;
}

bool func_and(bool op0, bool op1) {
  return op0 and op1;
}

bool func_and(bool op0, bool op1, bool op2) {
  return op0 and op1 and op2;
}

bool func_and(bool op0, bool op1, bool op2, bool op3) {
  return op0 and op1 and op2 and op3;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4) {
  return op0 and op1 and op2 and op3 and op4;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5) {
  return op0 and op1 and op2 and op3 and op4 and op5;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31 and op32;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31 and op32 and op33;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31 and op32 and op33 and op34;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31 and op32 and op33 and op34 and op35;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31 and op32 and op33 and op34 and op35 and op36;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31 and op32 and op33 and op34 and op35 and op36 and op37;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31 and op32 and op33 and op34 and op35 and op36 and op37 and op38;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31 and op32 and op33 and op34 and op35 and op36 and op37 and op38 and op39;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31 and op32 and op33 and op34 and op35 and op36 and op37 and op38 and op39 and op40;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31 and op32 and op33 and op34 and op35 and op36 and op37 and op38 and op39 and op40 and op41;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31 and op32 and op33 and op34 and op35 and op36 and op37 and op38 and op39 and op40 and op41 and op42;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31 and op32 and op33 and op34 and op35 and op36 and op37 and op38 and op39 and op40 and op41 and op42 and op43;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31 and op32 and op33 and op34 and op35 and op36 and op37 and op38 and op39 and op40 and op41 and op42 and op43 and op44;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31 and op32 and op33 and op34 and op35 and op36 and op37 and op38 and op39 and op40 and op41 and op42 and op43 and op44 and op45;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31 and op32 and op33 and op34 and op35 and op36 and op37 and op38 and op39 and op40 and op41 and op42 and op43 and op44 and op45 and op46;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31 and op32 and op33 and op34 and op35 and op36 and op37 and op38 and op39 and op40 and op41 and op42 and op43 and op44 and op45 and op46 and op47;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47, bool op48) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31 and op32 and op33 and op34 and op35 and op36 and op37 and op38 and op39 and op40 and op41 and op42 and op43 and op44 and op45 and op46 and op47 and op48;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47, bool op48, bool op49) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31 and op32 and op33 and op34 and op35 and op36 and op37 and op38 and op39 and op40 and op41 and op42 and op43 and op44 and op45 and op46 and op47 and op48 and op49;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47, bool op48, bool op49, bool op50) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31 and op32 and op33 and op34 and op35 and op36 and op37 and op38 and op39 and op40 and op41 and op42 and op43 and op44 and op45 and op46 and op47 and op48 and op49 and op50;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47, bool op48, bool op49, bool op50, bool op51) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31 and op32 and op33 and op34 and op35 and op36 and op37 and op38 and op39 and op40 and op41 and op42 and op43 and op44 and op45 and op46 and op47 and op48 and op49 and op50 and op51;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47, bool op48, bool op49, bool op50, bool op51, bool op52) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31 and op32 and op33 and op34 and op35 and op36 and op37 and op38 and op39 and op40 and op41 and op42 and op43 and op44 and op45 and op46 and op47 and op48 and op49 and op50 and op51 and op52;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47, bool op48, bool op49, bool op50, bool op51, bool op52, bool op53) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31 and op32 and op33 and op34 and op35 and op36 and op37 and op38 and op39 and op40 and op41 and op42 and op43 and op44 and op45 and op46 and op47 and op48 and op49 and op50 and op51 and op52 and op53;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47, bool op48, bool op49, bool op50, bool op51, bool op52, bool op53, bool op54) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31 and op32 and op33 and op34 and op35 and op36 and op37 and op38 and op39 and op40 and op41 and op42 and op43 and op44 and op45 and op46 and op47 and op48 and op49 and op50 and op51 and op52 and op53 and op54;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47, bool op48, bool op49, bool op50, bool op51, bool op52, bool op53, bool op54, bool op55) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31 and op32 and op33 and op34 and op35 and op36 and op37 and op38 and op39 and op40 and op41 and op42 and op43 and op44 and op45 and op46 and op47 and op48 and op49 and op50 and op51 and op52 and op53 and op54 and op55;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47, bool op48, bool op49, bool op50, bool op51, bool op52, bool op53, bool op54, bool op55, bool op56) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31 and op32 and op33 and op34 and op35 and op36 and op37 and op38 and op39 and op40 and op41 and op42 and op43 and op44 and op45 and op46 and op47 and op48 and op49 and op50 and op51 and op52 and op53 and op54 and op55 and op56;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47, bool op48, bool op49, bool op50, bool op51, bool op52, bool op53, bool op54, bool op55, bool op56, bool op57) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31 and op32 and op33 and op34 and op35 and op36 and op37 and op38 and op39 and op40 and op41 and op42 and op43 and op44 and op45 and op46 and op47 and op48 and op49 and op50 and op51 and op52 and op53 and op54 and op55 and op56 and op57;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47, bool op48, bool op49, bool op50, bool op51, bool op52, bool op53, bool op54, bool op55, bool op56, bool op57, bool op58) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31 and op32 and op33 and op34 and op35 and op36 and op37 and op38 and op39 and op40 and op41 and op42 and op43 and op44 and op45 and op46 and op47 and op48 and op49 and op50 and op51 and op52 and op53 and op54 and op55 and op56 and op57 and op58;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47, bool op48, bool op49, bool op50, bool op51, bool op52, bool op53, bool op54, bool op55, bool op56, bool op57, bool op58, bool op59) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31 and op32 and op33 and op34 and op35 and op36 and op37 and op38 and op39 and op40 and op41 and op42 and op43 and op44 and op45 and op46 and op47 and op48 and op49 and op50 and op51 and op52 and op53 and op54 and op55 and op56 and op57 and op58 and op59;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47, bool op48, bool op49, bool op50, bool op51, bool op52, bool op53, bool op54, bool op55, bool op56, bool op57, bool op58, bool op59, bool op60) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31 and op32 and op33 and op34 and op35 and op36 and op37 and op38 and op39 and op40 and op41 and op42 and op43 and op44 and op45 and op46 and op47 and op48 and op49 and op50 and op51 and op52 and op53 and op54 and op55 and op56 and op57 and op58 and op59 and op60;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47, bool op48, bool op49, bool op50, bool op51, bool op52, bool op53, bool op54, bool op55, bool op56, bool op57, bool op58, bool op59, bool op60, bool op61) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31 and op32 and op33 and op34 and op35 and op36 and op37 and op38 and op39 and op40 and op41 and op42 and op43 and op44 and op45 and op46 and op47 and op48 and op49 and op50 and op51 and op52 and op53 and op54 and op55 and op56 and op57 and op58 and op59 and op60 and op61;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47, bool op48, bool op49, bool op50, bool op51, bool op52, bool op53, bool op54, bool op55, bool op56, bool op57, bool op58, bool op59, bool op60, bool op61, bool op62) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31 and op32 and op33 and op34 and op35 and op36 and op37 and op38 and op39 and op40 and op41 and op42 and op43 and op44 and op45 and op46 and op47 and op48 and op49 and op50 and op51 and op52 and op53 and op54 and op55 and op56 and op57 and op58 and op59 and op60 and op61 and op62;
}

bool func_and(bool op0, bool op1, bool op2, bool op3, bool op4, bool op5, bool op6, bool op7, bool op8, bool op9, bool op10, bool op11, bool op12, bool op13, bool op14, bool op15, bool op16, bool op17, bool op18, bool op19, bool op20, bool op21, bool op22, bool op23, bool op24, bool op25, bool op26, bool op27, bool op28, bool op29, bool op30, bool op31, bool op32, bool op33, bool op34, bool op35, bool op36, bool op37, bool op38, bool op39, bool op40, bool op41, bool op42, bool op43, bool op44, bool op45, bool op46, bool op47, bool op48, bool op49, bool op50, bool op51, bool op52, bool op53, bool op54, bool op55, bool op56, bool op57, bool op58, bool op59, bool op60, bool op61, bool op62, bool op63) {
  return op0 and op1 and op2 and op3 and op4 and op5 and op6 and op7 and op8 and op9 and op10 and op11 and op12 and op13 and op14 and op15 and op16 and op17 and op18 and op19 and op20 and op21 and op22 and op23 and op24 and op25 and op26 and op27 and op28 and op29 and op30 and op31 and op32 and op33 and op34 and op35 and op36 and op37 and op38 and op39 and op40 and op41 and op42 and op43 and op44 and op45 and op46 and op47 and op48 and op49 and op50 and op51 and op52 and op53 and op54 and op55 and op56 and op57 and op58 and op59 and op60 and op61 and op62 and op63;
}

void classifier_{{id}}::classify({% for feature in features -%}{{feature['type']}}{{" data_"}}{{feature['name']}}{{", "}}{% endfor %}{% for predicted_class in classes -%}{{"int *class_"}}{{predicted_class}}{{", " if not loop.last else ")"}}{% endfor %}
{
  {% for predicted_class in classes -%}
  *class_{{predicted_class}} = 0;
  {% endfor %}
  {% for tree in trees -%}  
  decision_tree_{{tree['name']}}({% for feature in features -%}{{"data_"}}{{feature['name']}}{{", "}}{% endfor %}{% for predicted_class in classes -%}{{"class_"}}{{predicted_class}}{{", " if not loop.last else ");"}}{% endfor %}
  {% endfor %}

  int* results[{{classes|length}}] = {
    {% for predicted_class in classes -%}class_{{predicted_class}}{{", " if not loop.last}}{% endfor %}
    };
  {% if trees|length > 1 %}
  for (int i = 0; i < {{classes|length}}; i++)
    *(results[i]) = (*(results[i]) >= ({{trees|length}} / 2) ? 1 : 0);
  {% endif %}
#ifdef DEBUG    
  std::cout << std::endl << "Final results: ";
  for (int i = 0; i < {{classes|length}}; i++)
    std:: cout << *(results[i]) << " ";
  std::cout << std::endl;
#endif
}

{% for tree in trees -%}
void classifier_{{id}}::decision_tree_{{tree['name']}}({% for feature in features -%}{{feature['type']}}{{" data_"}}{{feature['name']}}{{", "}}{% endfor %}{% for predicted_class in classes -%}{{"int  *class_"}}{{predicted_class}}{{", " if not loop.last else ")"}}{% endfor %}
{
  {% for box in tree['boxes'] -%}
  {{box['data_type']}} {{box['name']}}_threshold = {{box['threshold']}};
  bool {{box['name']}} = mask(data_{{box['feature']}}, neglected_bits_{{box['feature']}}) {{box['c_operator']}} mask({{box['name']}}_threshold, neglected_bits_{{box['feature']}})  ? true : false;
  {% endfor %}  
  {% for function in tree['assertions'] -%}
  *class_{{function['class']}} += {{function['minimized']|replace('\'','')}};
  {% endfor %}
#ifdef DEBUG
  std::cout << std::endl;
  {% for box in tree['boxes'] -%}
  std::cout << __func__ << " {{box['name']}}: " << {{box['name']}} << std::endl;
  {% endfor %}  
  int* results[{{classes|length}}] = {
    {% for predicted_class in classes -%}class_{{predicted_class}}{{", " if not loop.last}}{% endfor %}
    };
  std::cout << "Results: ";
  for (int i = 0; i < {{classes|length}}; i++)
    std:: cout << *(results[i]) << " ";
  std::cout << std::endl;
#endif
}
{% endfor %}
