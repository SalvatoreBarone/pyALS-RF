// Copyright 2021-2023 Salvatore Barone <salvatore.barone@unina.it>
// 
// This file has been auto-generated by pyALS-rf
// https://github.com/SalvatoreBarone/pyALS-rf 
// 
// This is free software; you can redistribute it and/or modify it under
// the terms of the GNU General Public License as published by the Free
// Software Foundation; either version 3 of the License, or any later version.
// 
// This is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
// more details.
// 
// You should have received a copy of the GNU General Public License along with
// RMEncoder; if not, write to the Free Software Foundation, Inc., 51 Franklin
// Street, Fifth Floor, Boston, MA 02110-1301, USA. 

#ifndef PYALSRF_CXX_MODEL_{{id}}_H
#define PYALSRF_CXX_MODEL_{{id}}_H

class classifier_{{id}} {
  public:
    classifier_{{id}}() {}
    
    void classify(
      {% for feature in features -%}
      {{feature['type']}} data_{{feature['name']}},
      {% endfor %}
      {% for predicted_class in classes -%}
      int *class_{{predicted_class}}{{", " if not loop.last else ");"}}
      {% endfor %}

  private:
    {% for c in axconf -%}
    static const int neglected_bits_{{c['name']}} = {{c['nab']}};
    {% endfor %}

    {% for tree in trees -%}
    void decision_tree_{{tree['name']}}(
      {% for feature in features -%}
      {{feature['type']}} data_{{feature['name']}},
      {% endfor %}
      {% for predicted_class in classes -%}
      int *class_{{predicted_class}}{{", " if not loop.last else ");"}}
      {% endfor %}
    {% endfor %}
};
#endif

